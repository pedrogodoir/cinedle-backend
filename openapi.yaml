openapi: 3.0.3
info:
  title: Cinedle API
  description: OpenAPI 3.0 specification for the Cinedle backend
  version: 1.0.0
servers:
  - url: "http://localhost:{port}"
    description: Local server with configurable port
    variables:
      port:
        default: "8080"
paths:
  /movies/{id}:
    get:
      summary: Get movie by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Movie found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieRes"
        "400":
          description: Invalid ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /movies/summary/{title}:
    get:
      summary: Get movie summaries by title
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of movie summaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MovieSummary"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /movies/search/{title}:
    get:
      summary: Get movie by title
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Movie details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieRes"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Movie not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /classic-games/today:
    get:
      summary: Get today's classic game movie
      responses:
        "200":
          description: Movie of the day
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MovieRes"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /classic-games/guess:
    get:
      summary: Validate a guess for a classic game
      parameters:
        - name: movie_id
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
            description: Date in YYYY-MM-DD (defaults to today)
      responses:
        "200":
          description: Guess result
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    $ref: "#/components/schemas/MovieRes"
                  res:
                    $ref: "#/components/schemas/ClassicGameGuess"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /classic-games:
    post:
      summary: Create a classic game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassicGame"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassicGame"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Get all classic games
      responses:
        "200":
          description: List of classic games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClassicGame"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /classic-games/{id}:
    put:
      summary: Update a classic game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassicGame"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: Delete a classic game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: Get classic game by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Classic game
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassicGame"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    MessageResponse:
      type: object
      properties:
        message:
          type: string
    ClassicGame:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        date:
          type: string
          format: date-time
        total_guesses:
          type: integer
      required:
        - title
        - date
    ClassicGameGuess:
      type: object
      properties:
        title:
          type: string
        releaseDate:
          type: string
        budget:
          type: string
        ticketOffice:
          type: string
        voteAverage:
          type: string
        genres:
          type: string
        companies:
          type: string
        directors:
          type: string
        actors:
          type: string
        correct:
          type: boolean
    Movie:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        poster:
          type: string
        releaseDate:
          type: string
          format: date-time
        budget:
          type: string
          description: decimal as string
        ticketOffice:
          type: string
          description: decimal as string
        voteAverage:
          type: number
          format: float
    MovieSummary:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
    Genre:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Company:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Director:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    Actor:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    MovieRes:
      allOf:
        - $ref: "#/components/schemas/Movie"
        - type: object
          properties:
            genres:
              type: array
              items:
                $ref: "#/components/schemas/Genre"
            companies:
              type: array
              items:
                $ref: "#/components/schemas/Company"
            directors:
              type: array
              items:
                $ref: "#/components/schemas/Director"
            actors:
              type: array
              items:
                $ref: "#/components/schemas/Actor"
